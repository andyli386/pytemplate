name: build

on:
  push:
    branches:
      - master
    tags:
      - v*
  pull_request:
    branches:
      - master

permissions:
  contents: write

jobs:
  build-python:
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
        platform: [ubuntu-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.7.1
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Install uv
        run: pip install uv

      - name: Install dependencies
        run: |
          poetry install --with dev

      - name: Check code format with Black
        run: poetry run black --check .

      - name: Lint with Ruff
        run: poetry run ruff check .

      - name: Type check with mypy
        run: poetry run mypy .

      - name: Run tests with pytest and coverage
        run: poetry run pytest --cov=./ --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: true

      - name: Build package
        if: startsWith(github.ref, 'refs/tags/')
        run: poetry build

      - name: Generate a changelog
        uses: orhun/git-cliff-action@v2
        id: git-cliff
        if: startsWith(github.ref, 'refs/tags/')
        with:
          config: cliff.toml
          args: -vv --latest --strip header
        env:
          OUTPUT: CHANGES.md

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          body: ${{ steps.git-cliff.outputs.content }}
          files: |
            dist/*.whl
            dist/*.tar.gz

      - name: Publish to PyPI
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          poetry config pypi-token.pypi ${{ secrets.PYPI_API_TOKEN }}
          poetry publish
